from time import time, ctime
import datetime
from django.core.files import File
import os.path
import datetime
from django.core import serializers
from django.http import HttpResponse, HttpResponseRedirect, HttpResponseNotAllowed
from django.core.urlresolvers import reverse
from django.http.multipartparser import FILE
from django.shortcuts import render_to_response
from django.template.loader import render_to_string
from django.template import RequestContext, loader
from django.core.exceptions import *
from django.middleware.csrf import get_token
from django.utils import simplejson
from django.contrib.auth.forms import *
from django.template import Context, loader
from report_tool.models import Upload,upload_file_form,handle_uploaded_file,Pupil,Class,School
from django.http import HttpResponse,HttpResponseRedirect
import datetime
import report_tool.definitions
from settings import FILE_GENERATE_PATH
from django.core.servers.basehttp import FileWrapper
from xlwt.Workbook import Workbook
import xlrd,xlwt
from settings import FILE_UPLOAD_PATH, FILE_GENERATE_PATH
from report_tool.report import generate
import mimetypes
import os
UPLOAD = os.path.join('upload.html')
FILE_LIST = os.path.join('filelist.html')
GEn = os.path.join('generate.html')

def index(request):
    message=None
    t = loader.get_template(os.path.join('index.html'))
    c = RequestContext(request, {
                                 'message':message,
                                }
                       )
    return HttpResponse(t.render(c))


def download_file(request):
    message = None
    if (request.method == "GET"):
        fname = request.GET['filename']
        path = eval(request.GET['path'])
    wrapper = FileWrapper( open( '%s/%s' % (path, fname), "r" ) )
    response = HttpResponse(wrapper, mimetype='application/ms-excel')
    response['Content-Disposition'] = u'attachment; filename=%s' % fname
    return response

def file_list(request):
    message = None
    file_list = list(Upload.objects.all());
    c = RequestContext(request)
    return render_to_response(FILE_LIST, {'message':message,'file_list':file_list},
                              context_instance = c
                              )
def upload_file(request):     
    #This function handle upload action
    print request.POST
    message=None
    if request.method == 'POST':                # If file fo# rm is  submitted
        form = upload_file_form(request.POST, request.FILES)
        if form.is_valid():                     #Cheking form validate
            f = request.FILES['file']
            fileName, fileExtension = os.path.splitext(f.name);
<<<<<<< .mine
            print fileName, fileExtension
            if fileExtension!=('.xls'):
                message ="wrong type of input file"
=======
            if fileExtension!=('.xls'):
                message ='wrong file extension'
>>>>>>> .r48
            else:
                now = datetime.datetime.now()
                temp = Upload( filestore=str(now.year)+str(now.day)+str(now.month)+f.name,filename =f.name,description = request.POST['description'],upload_time=datetime.datetime.now())
                handle_uploaded_file(f, FILE_UPLOAD_PATH,temp.filestore)             #Save file content to uploaded folder
                temp.save()       #Save file information into database
                generate(f,temp.filestore)
                message="uploaded successfully"
        else:   
            message="Error"
            #return HttpResponseRedirect('http://127.0.0.1:8000/admin')
    else:                                   #if file is not submitted that generate the upload form
        form = upload_file_form()
        
    c = RequestContext(request)
    return render_to_response(UPLOAD, {'form':form, 'message':message},
                              context_instance = c
                              )
